[{"/var/singysongy/singysongy/client/src/index.tsx":"1","/var/singysongy/singysongy/client/src/serviceWorker.js":"2","/var/singysongy/singysongy/client/src/reportWebVitals.ts":"3","/var/singysongy/singysongy/client/src/Components/App/App.tsx":"4","/var/singysongy/singysongy/client/src/Components/Appbar/Appbar.tsx":"5","/var/singysongy/singysongy/client/src/Components/Home/Home.tsx":"6","/var/singysongy/singysongy/client/src/WebWorker.js":"7","/var/singysongy/singysongy/client/src/Components/VideoChat/VideoChat.tsx":"8","/var/singysongy/singysongy/client/src/Components/VideoChat/constants.tsx":"9","/var/singysongy/singysongy/client/src/Components/VideoChat/SocketsAndPeers.tsx":"10","/var/singysongy/singysongy/client/src/Components/VideoChat/VideoCard.tsx":"11","/var/singysongy/singysongy/client/src/Components/VideoChat/AudioFXDrawer.tsx":"12","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/peersAudio.js":"13","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/jungle.js":"14","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/reverb.js":"15","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/equalizer.js":"16","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/compressor.js":"17","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/looper.js":"18","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/utils.ts":"19","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/recorder.js":"20","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/recorder.worker.js":"21","/var/singysongy/singysongy/client/src/Components/RadioFeed/RadioFeed.tsx":"22","/var/singysongy/singysongy/client/src/Components/PlayRoom/PlayRoom.tsx":"23","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/peersAudio.js":"24","/var/singysongy/singysongy/client/src/Components/PlayRoom/constants.tsx":"25","/var/singysongy/singysongy/client/src/Components/PlayRoom/VideoCard.tsx":"26","/var/singysongy/singysongy/client/src/Components/PlayRoom/SocketsAndPeers.tsx":"27","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/utils.ts":"28","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/looper.js":"29","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/compressor.js":"30","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/equalizer.js":"31","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/reverb.js":"32","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/jungle.js":"33","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/recorder.js":"34","/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/recorder.worker.js":"35","/var/singysongy/singysongy/client/src/Components/PlayRoom/AudioFX.tsx":"36"},{"size":1333,"mtime":1624505931821,"results":"37","hashOfConfig":"38"},{"size":5353,"mtime":1618768773249,"results":"39","hashOfConfig":"38"},{"size":425,"mtime":1618768763485,"results":"40","hashOfConfig":"38"},{"size":339,"mtime":1618768763481,"results":"41","hashOfConfig":"38"},{"size":3747,"mtime":1625754097544,"results":"42","hashOfConfig":"38"},{"size":1403,"mtime":1625754132112,"results":"43","hashOfConfig":"38"},{"size":210,"mtime":1618768773249,"results":"44","hashOfConfig":"38"},{"size":8680,"mtime":1625253225729,"results":"45","hashOfConfig":"38"},{"size":1944,"mtime":1625754225704,"results":"46","hashOfConfig":"38"},{"size":2727,"mtime":1624406346968,"results":"47","hashOfConfig":"38"},{"size":4612,"mtime":1619042088141,"results":"48","hashOfConfig":"38"},{"size":34029,"mtime":1624507271700,"results":"49","hashOfConfig":"38"},{"size":1689,"mtime":1619656092941,"results":"50","hashOfConfig":"38"},{"size":7416,"mtime":1619656092825,"results":"51","hashOfConfig":"38"},{"size":1207,"mtime":1619656092829,"results":"52","hashOfConfig":"38"},{"size":1847,"mtime":1619656092973,"results":"53","hashOfConfig":"38"},{"size":1361,"mtime":1619656092789,"results":"54","hashOfConfig":"38"},{"size":4220,"mtime":1619656092973,"results":"55","hashOfConfig":"38"},{"size":423,"mtime":1619656092765,"results":"56","hashOfConfig":"38"},{"size":1851,"mtime":1624507219704,"results":"57","hashOfConfig":"38"},{"size":3483,"mtime":1619656092937,"results":"58","hashOfConfig":"38"},{"size":183,"mtime":1624484814308,"results":"59","hashOfConfig":"38"},{"size":7453,"mtime":1625253638619,"results":"60","hashOfConfig":"38"},{"size":1689,"mtime":1625246394655,"results":"61","hashOfConfig":"38"},{"size":1944,"mtime":1625246394651,"results":"62","hashOfConfig":"38"},{"size":4612,"mtime":1625246394647,"results":"63","hashOfConfig":"38"},{"size":2727,"mtime":1625246394647,"results":"64","hashOfConfig":"38"},{"size":423,"mtime":1625246394659,"results":"65","hashOfConfig":"38"},{"size":4220,"mtime":1625246394655,"results":"66","hashOfConfig":"38"},{"size":1361,"mtime":1625246394655,"results":"67","hashOfConfig":"38"},{"size":1847,"mtime":1625246394655,"results":"68","hashOfConfig":"38"},{"size":1207,"mtime":1625246394659,"results":"69","hashOfConfig":"38"},{"size":7416,"mtime":1625246394655,"results":"70","hashOfConfig":"38"},{"size":1851,"mtime":1625246394655,"results":"71","hashOfConfig":"38"},{"size":3483,"mtime":1625246394659,"results":"72","hashOfConfig":"38"},{"size":33901,"mtime":1625254096500,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"xc703w",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/singysongy/singysongy/client/src/index.tsx",[],["152","153"],"/var/singysongy/singysongy/client/src/serviceWorker.js",[],["154","155"],"/var/singysongy/singysongy/client/src/reportWebVitals.ts",[],"/var/singysongy/singysongy/client/src/Components/App/App.tsx",[],"/var/singysongy/singysongy/client/src/Components/Appbar/Appbar.tsx",[],"/var/singysongy/singysongy/client/src/Components/Home/Home.tsx",[],"/var/singysongy/singysongy/client/src/WebWorker.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/VideoChat.tsx",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"/var/singysongy/singysongy/client/src/Components/VideoChat/constants.tsx",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/SocketsAndPeers.tsx",["174","175"],"import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { ICE_CONFIGURATION, SOCKET_URL } from './constants';\n\nlet thisSocket = null;\n\nexport default function SocketsAndPeers({localStream, handleVideoListAdd, handleVideoListRemove, addChat, roomName}) {\n  \n  const socket = io(SOCKET_URL);\n  thisSocket = socket;\n  const peers = {};\n  useEffect(() => {\n    initSockets();\n    return function cleanup() {\n      socket.disconnect();\n    };\n  }, []);\n\n  function initSockets() {\n\n    console.log('init sockets and peers');\n    socket.on('connect', () => {\n      console.log('I AM ', socket.id);\n      socket.emit('subscribe', { room: roomName, socketId: socket.id });\n    });\n  \n    socket.on('initReceive', socket_id => {\n      console.log('INIT RECEIVE ' + socket_id)  \n      addPeer(socket_id, false)\n    });\n  \n    socket.on('initSend', data => {\n      console.log('INIT SEND RECEIVED from ' + JSON.stringify(data))\n      addPeer(data, true)\n    });\n\n    socket.on('signal', data => {\n      peers[data.socket_id].signal(data.signal)\n    });\n\n\t\tsocket.on('chat', data => {\n\t\t\tconsole.log('chat revieved on client', data);\n\t\t\taddChat(data, false);\n\t\t});\n  \n    socket.on('removePeer', socket_id => {\n      console.log('removing peer ' + socket_id);\n      removePeer(socket_id);\n    })\n  \n    socket.on('disconnect', () => {\n      console.log('GOT DISCONNECTED')\n      for (let socket_id in peers) {\n        removePeer(socket_id);\n      }\n    });\n  }\n\n  const addPeer = async function (socket_id: String, am_initiator: Boolean) {\n      console.log('add peer ' + socket_id + ' initiator? ' + am_initiator);\n      peers[socket_id] = await new SimplePeer({\n          initiator: am_initiator,\n          stream: localStream,\n          config: ICE_CONFIGURATION\n      });\n  \n      if (am_initiator === false) {\n        socket.emit('initSend', socket_id);\n      }\n      \n      peers[socket_id].on('signal', data => {\n        socket.emit('signal', {\n          signal: data,\n          socket_id: socket_id\n        })\n      })\n  \n      peers[socket_id].on('stream', stream => {\n        const videoProps = {src: stream, socketId: socket_id};\n        handleVideoListAdd(videoProps);\n      })\n  }\n  \n  function removePeer(socket_id: String) {\n    handleVideoListRemove(socket_id);\n    if (peers[socket_id]) peers[socket_id].destroy();\n    delete peers[socket_id];\n  }\n    \n  return <div></div>;\n      \n}\n\nexport const sendMessage = function(msg){\n  if (thisSocket != null){\n    console.log('sending chat ', msg);\n    let data = {\n\t\t\troom: roomName,\n\t\t\tmsg: msg,\n\t\t\tsender: 'test'\n    };\n\t\tconsole.log('sending chat ', data);\n    thisSocket.emit('chat', data);\n  }\n};","/var/singysongy/singysongy/client/src/Components/VideoChat/VideoCard.tsx",["176","177","178","179","180"],"import React, { VideoHTMLAttributes, useEffect, useState, useRef } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\n    srcObject: MediaStream\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    flexGrow: 1,\n  },\n\tslider: {\n\t\tcolor: 'white',\n    width: 200,\n\t\tpadding: '10px'\n  },\n  videoCard: {\n    background: \"#fff\",\n    '&:hover': {\n\t\t\tbackground: \"#fff\",\n\t\t\tposition: \"relative\",\n\t\t\ttop:0,\n\t\t\tleft: 0,   \n\t\t\theight: \"100%\",\n\t\t\twidth: \"100%\",\n\t\t\tzIndex: 9999,\n\t\t\tdisplay:'inline-block',\n    },\n\t\tbottom: 5,\n  },\n\tvideo: {\n\t\twidth: '100%',\n    height: 'auto',\n\t\tbottom: 5,\n\t},\n  videoOverlay: {\n\t\tposition: 'absolute',\n    bottom: 5,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex:300000,\n    padding: '10px',\n    width: '100%',\n    textAlign: 'center',\n  },\n\twhite: {\n\t\tcolor: 'white',\n\t}\n}));\n\nexport default function VideoCard({srcObject, ...props }: PropsType) {\n  const classes = useStyles();\n  const refVideo = useRef<HTMLVideoElement>(null);\n\n  const [mouseEnter, setMouseEnter] = useState(false);\n  const [isShowing, setIsShowing] = useState(false);\n\tconst [micOn, setMicOn] = useState(true);\n\tconst [camOn, setCamOn] = useState(true);\n\tconst [sliderVal, setSliderVal] = useState(1);\n\n\tuseEffect(() => {\n\t\tif (!refVideo.current) return\n\t\trefVideo.current.srcObject = srcObject\n\t}, [srcObject])\n\n\tuseEffect(() => {\n\t\tsetIsShowing(mouseEnter);\n\t}, [mouseEnter]);\n\n\tuseEffect(() => {\n\t\tprops.updatePeersAudioVolume(props.socketId, sliderVal);\n\t}, [sliderVal]);\n\n\tuseEffect(() => {\n\t\tprops.updatePeersMute(props.socketId, micOn);\n\t}, [micOn]);\n\n\tlet sizes = [12, 6, 4, 3, 2];\n\tif(props.numberOfVideos <=2){\n\t\tsizes = [12, 6, 6, 6, 6];\n\t}\n\telse if(props.numberOfVideos<=3){\n\t\tsizes = [6, 6, 4, 4, 4];\n\t}\n\telse if(props.numberOfVideos<=4){\n\t\tsizes = [6, 6, 4, 3, 3];\n\t}\n\telse if(props.numberOfVideos<=6){\n\t\tsizes = [6, 6, 4, 4, 2];\n\t}\n\telse if(props.numberOfVideos<=8){\n\t\tsizes = [6, 4, 4, 2, 2];\n\t}\n\telse{\n\t\tsizes = [4, 4, 3, 2, 2];\n\t}\n\n\tfunction handleMouseEnter() {\n\t\tsetMouseEnter(true);\n\t}\n\tfunction handleMouseLeave() {\n\t\tsetMouseEnter(false);\n\t}\n\n\tfunction toggleMic() {\n\t\tsetMicOn(!micOn);\n\t}\n\n\tfunction toggleCam() {\n\t\tlet newCam = !camOn;\n\t\tsetCamOn(newCam);\n\t\tif(props.socketId === 'local'){\n\t\t\tprops.updateLocalCam(newCam);\n\t\t}\n\t}\n\n\tconst handleSliderChange = (event: any, newValue: number | number[]) => {\n\t\tsetSliderVal(newValue as number);\n\t};\n\n\treturn (\n\t\t<Grid item xs={sizes[0]} sm={sizes[1]} md={sizes[2]} lg={sizes[3]} xl={sizes[4]}>\n\t\t\t<div className={classes.videoCard} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n\t\t\t\t<div className={classes.video}>\n\t\t\t\t\t<video\n\t\t\t\t\t\tref={refVideo}\n\t\t\t\t\t\tautoPlay={true}\n\t\t\t\t\t\twidth={'100%'}\n\t\t\t\t\t\tmuted={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{ mouseEnter && \n\t\t\t\t\t<div className={classes.videoOverlay}>\n\t\t\t\t\t\t<Grid \n\t\t\t\t\t\t\tcontainer \n\t\t\t\t\t\t\tclassName={classes.root} \n\t\t\t\t\t\t\tspacing={2} \n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography align='center' variant='h5' className={classes.white}>{props.socketId}</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid \n\t\t\t\t\t\t\tcontainer \n\t\t\t\t\t\t\tclassName={classes.root} \n\t\t\t\t\t\t\tspacing={2} \n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Slider \n\t\t\t\t\t\t\t\t\tclassName={classes.slider}\n\t\t\t\t\t\t\t\t\tvalue={sliderVal}\n\t\t\t\t\t\t\t\t\tonChange={handleSliderChange}\n\t\t\t\t\t\t\t\t\tmin={0.0} \n\t\t\t\t\t\t\t\t\tmax={1.0} \n\t\t\t\t\t\t\t\t\tstep={0.00000001}\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<IconButton aria-label=\"delete\" color=\"primary\" onClick={toggleMic}>\n\t\t\t\t\t\t\t\t\t{ micOn ? <MicIcon style={{fill: \"white\"}}/> : <MicOffIcon style={{fill: \"red\"}}/> }\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t{ (props.socketId == 'local') && <IconButton aria-label=\"delete\" color=\"primary\" onClick={toggleCam}>\n\t\t\t\t\t\t\t\t\t\t{ camOn ? <VideocamIcon style={{fill: \"white\"}}/> : <VideocamOffIcon style={{fill: \"red\"}}/> }\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</Grid>\n    );\n  }\n  ","/var/singysongy/singysongy/client/src/Components/VideoChat/AudioFXDrawer.tsx",["181","182","183","184","185","186","187"],"import React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { REVERB_PRESET_LIST } from './constants';\nimport Jungle from './webAudio/jungle.js';\nimport Reverb from './webAudio/reverb.js';\nimport Equalizer from './webAudio/equalizer.js';\nimport Compressor from './webAudio/compressor.js';\nimport Looper from './webAudio/looper.js';\nimport { mixAudioTracks } from './webAudio/utils.ts';\n\nconst RECORDING_MAX_TIME_LIMIT = 10000;\n\nconst useStyles = makeStyles((theme) => ({\n  slider: {\n    width: 270,\n    align: 'center',\n    left: '40px'\n  },\n  nestedCheckbox: {\n    left: '60px',\n  },\n  switch: {\n    align: 'center',\n    left: '40px'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  drawerBody: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n  },\n  select: {\n    minWidth: 240,\n    paddingLeft: theme.spacing(4)\n  },\n}));\n\nexport default function AudioFXDrawer({ \n  audioCtx, \n  stream, \n  updateLocalStreamAudio, \n  remoteGain,\n  remoteMute\n}) {\n  const classes = useStyles();\n  const [monitor, setMonitor] = React.useState<boolean>(false);\n  const [monitorGain, setMonitorGain] = React.useState<number>(0);\n  const [laughSoundBuffer, setLaughSoundBuffer] = useState(null);\n  const [noooSoundBuffer, setNoooSoundBuffer] = useState(null);\n  const [whistleSoundBuffer, setWhistleSoundBuffer] = useState(null);\n  const [hornSoundBuffer, setHornSoundBuffer] = useState(null);\n  const [eq, setEq] = useState(false);\n  const [comp, setComp] = useState(false);\n  const [pitchShift, setPitchShift] = useState(false);\n  const [pitchOffsetAmount, setPitchOffsetAmount] = useState(0);\n  const [reverb, setReverb] = useState(false);\n  const [reverbWetGain, setReverbWetGain] = useState(0.5);\n  const [reverbDryGain, setReverbDryGain] = useState(0.5);\n  const [reverbPreset, setReverbPreset] = useState('MediumHall');\n  const [pitchShiftWetGain, setPitchShiftWetGain] = useState(0.99);\n  const [pitchShiftDryGain, setPitchShiftDryGain] = useState(0);\n  const [samples, setSamples] = useState(false);\n  const [samplesGainValue, setSamplesGainValue] = useState(0.25);\n\n  const [loops, setLoops] = useState(false);\n  const [loopsGainValue, setLoopsGainValue] = useState(1);\n  const [newLoopText, setNewLoopText] = useState('New Loop');\n  const [newLoopRecording, setNewLoopRecording] = useState(false);\n  const [loopsToAll, setLoopsToAll] = useState(false);\n  const [overdubbing, setOverdubbing] = useState(false);\n  const [recordLimit, setRecordLimit] = useState(null);\n  const [fxToLooper, setFxToLooper] = useState(true);\n\n  const [compressorGain, setCompressorGain] = useState(1.0);\n  const [compressorThreshold, setCompressorThreshold] = useState(-50);\n  const [compressorKnee, setCompressorKnee] = useState(40);\n  const [compressorRatio, setCompressorRatio] = useState(12);\n  const [compressorAttack, setCompressorAttack] = useState(0.003);\n  const [compressorRelease, setCompressorRelease] = useState(0.25);\n\n  const [eqGain, setEqGain] = useState(1.0);\n  const [lowEQSlider, setLowEQSlider] = useState(0);\n  const [lowMidEQSlider, setLowMidEQSlider] = useState(0);\n  const [midEQSlider, setMidEQSlider] = useState(0);\n  const [highMidEQSlider, setHighMidEQSlider] = useState(0);\n  const [highEQSlider, setHighEQSlider] = useState(0);\n\n  let input = useRef(null);\n  let equalizer = useRef(null);\n  let compressor = useRef(null);\n  let pitchShifter = useRef(null);\n  let reverberator = useRef(null);\n  let samplesGain = useRef(null);\n  let samplesDestination = useRef(null);\n  let looper = useRef(null);\n  let loopsGain = useRef(null);\n  let loopsDestination = useRef(null);\n  let remoteAudioGain = useRef(null);\n  let remoteAudioDestination = useRef(null);\n  let localOutputVolume = useRef(null);\n  let eqToCompressorPassthrough = useRef(null);\n  let compressorToPitchshiftPassthrough = useRef(null);\n  let pitchshiftToReverbPassthrough = useRef(null);\n  let finalEffectsPassthrough = useRef(null);\n\n  useEffect(() => {\n    if(audioCtx !== null){\n      samplesDestination.current = audioCtx.createMediaStreamDestination();\n      loopsDestination.current = audioCtx.createMediaStreamDestination();\n      remoteAudioDestination.current = audioCtx.createMediaStreamDestination();\n      remoteAudioGain.current = audioCtx.createGain();\n      remoteAudioGain.current.gain.value = remoteGain * remoteMute;\n      localOutputVolume.current = audioCtx.createGain();\n      localOutputVolume.current.gain.value = monitorGain;\n      eqToCompressorPassthrough.current = audioCtx.createGain();\n      compressorToPitchshiftPassthrough.current = audioCtx.createGain();\n      pitchshiftToReverbPassthrough.current = audioCtx.createGain();\n      finalEffectsPassthrough.current = audioCtx.createGain();\n      samplesGain.current = audioCtx.createGain();\n      samplesGain.current.gain.value = samplesGainValue;\n      samplesGain.current.connect(samplesDestination.current);\n      samplesGain.current.connect(localOutputVolume.current);\n      loopsGain.current = audioCtx.createGain();\n      loopsGain.current.gain.value = loopsGainValue;\n      loopsGain.current.connect(loopsDestination.current);\n      loopsGain.current.connect(localOutputVolume.current);\n      remoteAudioGain.current.connect(remoteAudioDestination.current);\n\n      initSamples();\n\n      input.current = audioCtx.createMediaStreamSource(stream);\n\n      input.current.connect(eqToCompressorPassthrough.current);\n      eqToCompressorPassthrough.current.connect(compressorToPitchshiftPassthrough.current);\n      compressorToPitchshiftPassthrough.current.connect(pitchshiftToReverbPassthrough.current);\n      pitchshiftToReverbPassthrough.current.connect(finalEffectsPassthrough.current);\n      finalEffectsPassthrough.current.connect(remoteAudioGain.current);\n      finalEffectsPassthrough.current.connect(localOutputVolume.current);\n\n      equalizer.current =  new Equalizer(audioCtx);\n      compressor.current = new Compressor(audioCtx);\n      \n      pitchShifter.current =  new Jungle(audioCtx);\n      pitchShifter.current.setPitchOffset(pitchOffsetAmount);\n\n      reverberator.current =  new Reverb(audioCtx, 'MediumHall');\n      reverberator.current.setReverbPreset(reverbPreset);\n      reverberator.current.setReverbDryGain(reverbDryGain);\n      reverberator.current.setReverbWetGain(reverbWetGain);\n\n      looper.current = new Looper(audioCtx, createLoopControl, updateNewLoopText);\n      finalEffectsPassthrough.current.connect(looper.current.input);\n\n      var originalTrack = stream.getAudioTracks()[0];\n      stream.removeTrack(originalTrack);\n      var mixedTrack = mixAudioTracks(audioCtx, samplesDestination.current.stream, remoteAudioDestination.current.stream);\n      stream.addTrack(mixedTrack);\n      updateLocalStreamAudio(stream);\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if(remoteAudioGain.current && remoteGain){\n      remoteAudioGain.current.gain.value = remoteGain * remoteMute;\n    }\n  }, [remoteGain, remoteMute]);\n\n  useEffect(() => {\n    if(localOutputVolume.current && monitorGain){\n      localOutputVolume.current.gain.value = monitorGain;\n    }\n  }, [monitorGain]);\n\n  useEffect(() => {\n    if(localOutputVolume.current){\n      if(monitor){\n        localOutputVolume.current.connect(audioCtx.destination);\n      }\n      else {\n        localOutputVolume.current.disconnect(audioCtx.destination);\n      }\n    }\n    \n  }, [monitor, audioCtx?.destination]);\n\n  useEffect(() => {\n    if (equalizer.current){\n      if(eq) {\n        input.current.disconnect(eqToCompressorPassthrough.current);\n        input.current.connect(equalizer.current.input);\n        equalizer.current.output.connect(eqToCompressorPassthrough.current);\n      }\n      else {\n        input.current.disconnect(equalizer.current.input);\n        equalizer.current.output.disconnect(eqToCompressorPassthrough.current);\n        input.current.connect(eqToCompressorPassthrough.current);\n      }\n    }\n  }, [eq]);\n\n  useEffect(() => {\n    if (compressor.current){\n      if(comp) {\n        eqToCompressorPassthrough.current.disconnect(compressorToPitchshiftPassthrough.current);\n        eqToCompressorPassthrough.current.connect(compressor.current.input);\n        compressor.current.output.connect(compressorToPitchshiftPassthrough.current);\n        compressor.current.setCompressorGain(compressorGain);\n      }\n      else {\n        eqToCompressorPassthrough.current.disconnect(compressor.current.input);\n        compressor.current.output.disconnect(compressorToPitchshiftPassthrough.current);\n        eqToCompressorPassthrough.current.connect(compressorToPitchshiftPassthrough.current);\n      }\n    }\n  }, [comp]);\n\n  useEffect(() => {\n    if (pitchShifter.current){\n      if(pitchShift) {\n        compressorToPitchshiftPassthrough.current.disconnect(pitchshiftToReverbPassthrough.current);\n        compressorToPitchshiftPassthrough.current.connect(pitchShifter.current.input);\n        pitchShifter.current.output.connect(pitchshiftToReverbPassthrough.current);\n        pitchShifter.current.setJungleWetGain(pitchShiftWetGain);\n        pitchShifter.current.setJungleDryGain(pitchShiftDryGain);\n      }\n      else {\n        compressorToPitchshiftPassthrough.current.disconnect(pitchShifter.current.input);\n        pitchShifter.current.output.disconnect(pitchshiftToReverbPassthrough.current);\n        compressorToPitchshiftPassthrough.current.connect(pitchshiftToReverbPassthrough.current);\n      }\n    }\n  }, [pitchShift]);\n\n  useEffect(() => {\n    if(pitchShifter.current){\n      pitchShifter.current.setPitchOffset(pitchOffsetAmount);\n    }\n  }, [pitchOffsetAmount]);\n\n  useEffect(() => {\n    if (reverberator.current){\n      if(reverb) {\n        pitchshiftToReverbPassthrough.current.disconnect(finalEffectsPassthrough.current);\n        pitchshiftToReverbPassthrough.current.connect(reverberator.current.input);\n        reverberator.current.output.connect(finalEffectsPassthrough.current);\n      }\n      else {\n        pitchshiftToReverbPassthrough.current.disconnect(reverberator.current.input);\n        reverberator.current.output.disconnect(finalEffectsPassthrough.current);\n        pitchshiftToReverbPassthrough.current.connect(finalEffectsPassthrough.current);\n      }\n    }\n  }, [reverb]);\n\n  useEffect(() => {\n    if(reverberator.current){\n      reverberator.current.setReverbPreset(reverbPreset);\n    }\n  }, [reverbPreset]);\n\n  useEffect(() => {\n    if(reverberator.current){\n      reverberator.current.setReverbWetGain(reverbWetGain);\n    }\n  }, [reverbWetGain]);\n\n  useEffect(() => {\n    if(reverberator.current){\n      reverberator.current.setReverbDryGain(reverbDryGain);\n    }\n  }, [reverbDryGain]);\n\n  useEffect(() => {\n    if(pitchShifter.current){\n      pitchShifter.current.setJungleWetGain(pitchShiftWetGain);\n    }\n  }, [pitchShiftWetGain]);\n\n  useEffect(() => {\n    if(pitchShifter.current){\n      pitchShifter.current.setJungleDryGain(pitchShiftDryGain);\n    }\n  }, [pitchShiftDryGain]);\n\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.setEqGain(eqGain);\n    }\n  }, [eqGain]);\n\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.changeHighEQ(highEQSlider);\n    }\n  }, [highEQSlider]);\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.changeHighMidEQ(highMidEQSlider);\n    }\n  }, [highMidEQSlider]);\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.changeMidEQ(midEQSlider);\n    }\n  }, [midEQSlider]);\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.changeLowMidEQ(lowMidEQSlider);\n    }\n  }, [lowMidEQSlider]);\n  useEffect(() => {\n    if(equalizer.current){\n      equalizer.current.changeLowEQ(lowEQSlider);\n    }\n  }, [lowEQSlider]);\n\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorGain(compressorGain);\n    }\n  }, [compressorGain]);\n\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorThreshold(compressorThreshold);\n    }\n  }, [compressorThreshold]);\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorKnee(compressorKnee);\n    }\n  }, [compressorKnee]);\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorRatio(compressorRatio);\n    }\n  }, [compressorRatio]);\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorAttack(compressorAttack);\n    }\n  }, [compressorAttack]);\n\n  useEffect(() => {\n    if(compressor.current){\n      compressor.current.setCompressorRelease(compressorRelease);\n    }\n  }, [compressorRelease]);\n\n  useEffect(() => {\n    if(samplesGain.current){\n      samplesGain.current.gain.value = samplesGainValue;\n    }\n  }, [samplesGainValue]);\n\n  useEffect(() => {\n    if(loopsGain.current){\n      loopsGain.current.gain.value = loopsGainValue;\n    }\n  }, [loopsGainValue]);\n\n  useEffect(() => {\n    if (looper.current){\n      if(loops) {\n        looper.current.output.connect(loopsGain.current);\n      }\n      else {\n        looper.current.output.disconnect(loopsGain.current);\n      }\n    }\n  }, [loops]);\n\n  async function initSamples() {\n    await loadSound('audio/laugh.wav', 'laugh');\n    await loadSound('audio/horn.wav', 'horn');\n    await loadSound('audio/whistle.wav', 'whistle');\n    await loadSound('audio/nooo.wav', 'nooo');\n  }\n\n  function loadSound(url, soundName) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        audioCtx.decodeAudioData(request.response,\n        function(decodedAudio) {\n            switch(soundName) {\n                case 'laugh':\n                    setLaughSoundBuffer(decodedAudio);\n                    break;\n                case 'horn':\n                    setHornSoundBuffer(decodedAudio);\n                    break;\n                case 'whistle':\n                    setWhistleSoundBuffer(decodedAudio);\n                    break;\n                case 'nooo':\n                    setNoooSoundBuffer(decodedAudio);\n                    break;\n            }\n        },\n        function() {\n            alert('error decoding file data: ' + url);\n        });\n    };\n    request.send();\n  }\n\n  function laugh() {\n    var laughSound = audioCtx.createBufferSource(); \n    laughSound.buffer = laughSoundBuffer;\n    if (samplesGain.current) {\n      laughSound.connect(samplesGain.current);\n      laughSound.start(0);\n    }\n  }\n  function whistle() {\n      var whistleSound = audioCtx.createBufferSource();\n      whistleSound.buffer = whistleSoundBuffer;\n      if (samplesGain.current) {\n          whistleSound.connect(samplesGain.current);\n          whistleSound.start(0);\n      }\n  }\n  function nooo() {\n      var noooSound = audioCtx.createBufferSource();\n      noooSound.buffer = noooSoundBuffer;\n      if (samplesGain.current) {\n          noooSound.connect(samplesGain.current);\n          noooSound.start(0);\n      }\n  }\n  function horn() {\n      var hornSound = audioCtx.createBufferSource();\n      hornSound.buffer = hornSoundBuffer;\n      if (samplesGain.current) {\n          hornSound.connect(samplesGain.current);\n          hornSound.start(0);\n      }\n  }\n\n  function newLoop() {\n    console.log(\"recordLimit\", recordLimit);\n    if(!newLoopRecording){\n      if(!overdubbing){\n        console.log('starting new loop recording');\n        setNewLoopText('Recording... Press to Stop');\n        setNewLoopRecording(true);\n        looper.current.recordNewLoop();\n\n        setRecordLimit(setTimeout(function(){\n          console.log(\"in set timeout\")\n          stopRecordingNewLoop();\n        }, RECORDING_MAX_TIME_LIMIT ));\n        console.log('record limit ', recordLimit);\n\n      }\n      else {\n        setNewLoopText('Waiting for downbeat...');\n        looper.current.addOverdub();\n      }\n    }\n    else {\n      console.log('manually stopped recording');\n      clearTimeout(recordLimit);\n      stopRecordingNewLoop();\n    }\n  }\n  function stopRecordingNewLoop() {\n    console.log(\"stopping recording\");\n    setNewLoopText('Push to Overdub');\n    setOverdubbing(true);\n    setNewLoopRecording(false);\n    looper.current.getNewLoopAndPlay();\n  }\n  function loopOverdub() {\n    looper.current.addOverdub();\n  }  \n  function loopPlay() {\n    looper.current.play();\n  }  \n  function loopStop() {\n    looper.current.stop();\n  }  \n  function loopErase() {\n    looper.current.clearAll();\n    setOverdubbing(false);\n    setNewLoopRecording(false);\n    setNewLoopText('New Loop');\n  }  \n\n  function updateNewLoopText(buttonText) {\n    setNewLoopText(buttonText);\n  }\n\n  const handleMonitorCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMonitor(event.target.checked);\n  };\n\n  const handleMonitorGainChange = (event: any, newValue: number | number[]) => {\n    setMonitorGain(newValue as number);\n  };\n\n  const handlePitchShiftCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPitchShift(event.target.checked);\n  };\n\n  const handlePitchOffsetChange = (event: any, newValue: number | number[]) => {\n    setPitchOffsetAmount(newValue as number);\n  };\n  const handlePitchShiftGainChange = (event: any, newValue: number | number[]) => {\n    setPitchShiftWetGain(newValue as number);\n    setPitchShiftDryGain(1.0 - newValue as number);\n  };\n\n  const handleReverbCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setReverb(event.target.checked);\n  };\n\n  const handleReverbGainChange = (event: any, newValue: number | number[]) => {\n    setReverbWetGain(newValue as number);\n    setReverbDryGain(1 - newValue as number);\n  };\n\n  const handleReverbPresetSelect = (event: React.ChangeEvent<{ value: string }>) => {\n    setReverbPreset(event.target.value);\n  };\n\n  const handleEqCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEq(event.target.checked);\n  };\n\n  const handleEqGain = (event: any, newValue: number | number[]) => {\n    setEqGain(newValue as number);\n  };\n\n  const handleHighEQ = (event: any, newValue: number | number[]) => {\n    setHighEQSlider(newValue as number);\n  };\n\n  const handleLowMidEQ = (event: any, newValue: number | number[]) => {\n    setLowMidEQSlider(newValue as number);\n  };\n\n  const handleMidEQ  = (event: any, newValue: number | number[]) => {\n    setMidEQSlider(newValue as number);\n  };\n\n  const handleHighMidEQ = (event: any, newValue: number | number[]) => {\n    setHighMidEQSlider(newValue as number);\n  };\n\n  const handleLowEQ = (event: any, newValue: number | number[]) => {\n    setLowEQSlider(newValue as number);\n  };\n\n  const handleCompCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setComp(event.target.checked);\n  };\n\n  const handleCompressorGainChange = (event: any, newValue: number | number[]) => {\n    setCompressorGain(newValue as number);\n  };\n\n  const handleCompressorThresholdChange = (event: any, newValue: number | number[]) => {\n    setCompressorThreshold(newValue as number);\n  };\n\n  const handleCompressorKneeChange = (event: any, newValue: number | number[]) => {\n    setCompressorKnee(newValue as number);\n  };\n\n  const handleCompressorRatioChange = (event: any, newValue: number | number[]) => {\n    setCompressorRatio(newValue as number);\n  };\n\n  const handleCompressorAttackChange = (event: any, newValue: number | number[]) => {\n    setCompressorAttack(newValue as number);\n  };\n\n  const handleCompressorReleaseChange = (event: any, newValue: number | number[]) => {\n    setCompressorRelease(newValue as number);\n  };\n\n  const handleSamplesCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSamples(event.target.checked);\n  };\n\n  const handleSamplesGainChange = (event: any, newValue: number | number[]) => {\n    setSamplesGainValue(newValue as number);\n  };\n\n  const handleLoopsCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLoops(event.target.checked);\n  };\n\n  const handleLoopsGainChange = (event: any, newValue: number | number[]) => {\n    setLoopsGainValue(newValue as number);\n  };\n\n  const handleLoopsToAllCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLoopsToAll(event.target.checked);\n    if(event.target.checked){\n      loopsGain.current.connect(remoteAudioDestination.current);\n    }\n    else{\n      loopsGain.current.disconnect(remoteAudioDestination.current);\n    }\n  };\n\n  const handleFXToLooperCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFxToLooper(event.target.checked);\n    if(event.target.checked){\n      input.current.disconnect(looper.current.input);\n      finalEffectsPassthrough.current.connect(looper.current.input);\n    }\n    else{\n      finalEffectsPassthrough.current.disconnect(looper.current.input);\n      input.current.connect(looper.current.input);\n    }\n  };\n\n  const createLoopControl = (loopId) => {\n    console.log('creating loop control for loopId: ', loopId);\n  }\n\n  return(\n    <div > \n        <div className={classes.drawerHeader}>\n          <h1>AUDIO</h1>\n        </div>\n        <Divider />\n        <div className={classes.drawerBody}>\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={monitor}\n                onChange={handleMonitorCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Monitor My Audio'\n          />\n        </FormGroup> \n        {monitor && <div>\n          <Slider \n            className={classes.slider}\n              padding={3} \n              value={monitorGain} \n              onChange={handleMonitorGainChange} \n              min={0.0} \n              max={1.0} \n              step={0.00000001}\n            /> \n          </div>\n        } \n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={eq}\n                onChange={handleEqCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Equalizer'\n          />\n        </FormGroup> \n        { eq && \n          <div>\n            <Typography id=\"highEq\" gutterBottom>\n              High\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={highEQSlider} \n              onChange={handleHighEQ} \n              min={-40} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"highEq\"\n            /> \n            <Typography id=\"highMidEq\" gutterBottom>\n              High-Mid\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={highMidEQSlider} \n              onChange={handleHighMidEQ} \n              min={-40} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"highMidEq\"\n            /> \n            <Typography id=\"midEq\" gutterBottom>\n              Mid\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={midEQSlider} \n              onChange={handleMidEQ} \n              min={-40} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"midEq\"\n            /> \n            <Typography id=\"lowMidEq\" gutterBottom>\n              Low-Mid\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={lowMidEQSlider} \n              onChange={handleLowMidEQ} \n              min={-40} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"lowMidEq\"\n            /> \n            <Typography id=\"lowEq\" gutterBottom>\n              Low\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={lowEQSlider} \n              onChange={handleLowEQ} \n              min={-40} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"lowEq\"\n            /> \n            <Typography id=\"eqGain\" gutterBottom>\n              Gain\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={eqGain} \n              onChange={handleEqGain} \n              min={0} \n              max={1.0} \n              step={0.00001}\n              aria-labelledby=\"eqGain\"\n            />\n          </div>\n        }\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={comp}\n                onChange={handleCompCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Compressor'\n          />\n        </FormGroup> \n        { comp && \n          <div>\n            <Typography id=\"compressorThreshold\" gutterBottom>\n              Threshold\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorThreshold} \n              onChange={handleCompressorThresholdChange} \n              min={-100} \n              max={0} \n              step={0.1}\n              aria-labelledby=\"compressorThreshold\"\n            />  \n            <Typography id=\"compressorKnee\" gutterBottom>\n              Knee\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorKnee} \n              onChange={handleCompressorKneeChange} \n              min={0} \n              max={40} \n              step={0.1}\n              aria-labelledby=\"compressorKnee\"\n            />  \n            <Typography id=\"compressorRatio\" gutterBottom>\n              Ratio\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorRatio} \n              onChange={handleCompressorRatioChange} \n              min={1} \n              max={20} \n              step={0.1}\n              aria-labelledby=\"compressorRatio\"\n            />  \n            <Typography id=\"compressorAttack\" gutterBottom>\n              Attack\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorAttack} \n              onChange={handleCompressorAttackChange} \n              min={0} \n              max={1.0} \n              step={0.00001}\n              aria-labelledby=\"compressorAttack\"\n            />  \n            <Typography id=\"compressorRelease\" gutterBottom>\n              Release\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorRelease} \n              onChange={handleCompressorReleaseChange} \n              min={0} \n              max={1.0} \n              step={0.00001}\n              aria-labelledby=\"compressorRelease\"\n            />  \n            <Typography id=\"compressorGain\" gutterBottom>\n              Gain\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={compressorGain} \n              onChange={handleCompressorGainChange} \n              min={0} \n              max={1.0} \n              step={0.00001}\n              aria-labelledby=\"compressorGain\"\n            />\n          </div>\n        }\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={pitchShift}\n                onChange={handlePitchShiftCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Pitch Shifter'\n          />\n        </FormGroup> \n        { pitchShift && \n          <div>\n            <Typography id=\"pitch\" gutterBottom>\n              Pitch ({pitchOffsetAmount})\n            </Typography>\n            <Slider \n            className={classes.slider}\n              padding={3} \n              value={pitchOffsetAmount} \n              onChange={handlePitchOffsetChange} \n              min={-1.5} \n              max={1.5} \n              step={0.01}\n              aria-labelledby=\"pitch\"\n            /> \n            <Typography id=\"pitch-shift-gain\" gutterBottom>\n              Dry - Wet\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={pitchShiftWetGain} \n              onChange={handlePitchShiftGainChange} \n              min={0.0} \n              max={1.0} \n              step={0.00000001}\n              aria-labelledby=\"pitch-shift-gain\"\n            /> \n          </div>\n        }\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={reverb}\n                onChange={handleReverbCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Reverb'\n          />\n        </FormGroup> \n        { reverb && \n          <div>\n            <Typography gutterBottom>\n              Preset\n            </Typography>\n            <FormControl className={classes.select}>\n              <Select\n              variant=\"outlined\"\n                value={reverbPreset}\n                onChange={handleReverbPresetSelect}\n              >\n                {REVERB_PRESET_LIST.map((preset) => (\n                  <MenuItem key={preset} value={preset}>\n                    {preset}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography id=\"reverb-wet\" gutterBottom>\n              Dry - Wet\n            </Typography>\n            <Slider \n              className={classes.slider}\n              padding={3} \n              value={reverbWetGain} \n              onChange={handleReverbGainChange} \n              min={0.0} \n              max={1.0} \n              step={0.00000001}\n              aria-labelledby=\"reverb-wet\"\n            /> \n          </div>\n        }\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={samples}\n                onChange={handleSamplesCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Samples'\n          />\n        </FormGroup> \n        { samples && <div>\n          <Typography id=\"samples-gain\" gutterBottom>\n            Volume\n          </Typography>\n          <Slider \n          className={classes.slider}\n            padding={3} \n            value={samplesGainValue} \n            onChange={handleSamplesGainChange}\n            max={1.0} \n            step={0.00000001}\n            aria-labelledby=\"samples-gain\"\n          /> \n          <Box spacing={2}>\n            <Button variant=\"outlined\" id='laugh' onClick={laugh}>\n              Laugh\n            </Button>\n            <Button variant=\"outlined\" id='nooo' onClick={nooo}>\n              Nooo\n            </Button>\n            <Button variant=\"outlined\" id='horn' onClick={horn}>\n              Horn\n            </Button>\n            <Button variant=\"outlined\" id='whistle' onClick={whistle}>\n              Whistle\n            </Button>\n          </Box>\n          </div>\n        }\n        <FormGroup row>\n          <FormControlLabel\n            control={   \n              <Checkbox\n                checked={loops}\n                onChange={handleLoopsCheckbox}\n                color=\"secondary\"\n              /> \n            }\n            label='Looper'\n          />\n        </FormGroup> \n        { loops && <div>\n          <Box paddingLeft={2} marginLeft={2} className={classes.nestedCheckbox}>\n            <FormControlLabel\n              control={   \n                <Checkbox\n                  checked={fxToLooper}\n                  onChange={handleFXToLooperCheckbox}\n                  color=\"secondary\"\n                /> \n              }\n              label='FX->Looper (on) / No FX (off)'\n            />\n          </Box>\n          <Box paddingLeft={2} marginLeft={2} className={classes.nestedCheckbox}>\n            <FormControlLabel\n              control={   \n                <Checkbox\n                  checked={loopsToAll}\n                  onChange={handleLoopsToAllCheckbox}\n                  color=\"secondary\"\n                /> \n              }\n              label='Send-to-all (on) / Preview (off)'\n            />\n          </Box>\n          <Typography id=\"loops-gain\" gutterBottom>\n            Volume\n          </Typography>\n          <Slider \n            className={classes.slider}\n            padding={3} \n            value={loopsGainValue} \n            onChange={handleLoopsGainChange}\n            max={1.0} \n            step={0.00000001}\n            aria-labelledby=\"loops-gain\"\n          /> \n          <Box spacing={2}>\n            <Button variant=\"outlined\" id='newLoop' onClick={newLoop}>\n              {newLoopText}\n            </Button><br/><br/>  \n            <Button variant=\"outlined\" id='loopStop' onClick={loopStop}>\n              Stop Loops\n            </Button><br/><br/>\n            <Button variant=\"outlined\" id='loopPlay' onClick={loopPlay}>\n              Play Loops\n            </Button><br/><br/>\n            <Button variant=\"outlined\" id='loopErase' onClick={loopErase}>\n              Erase Loops\n            </Button><br/><br/>\n          </Box>\n          </div>\n        }\n        </div>\n    </div>\n  );\n}","/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/peersAudio.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/jungle.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/reverb.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/equalizer.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/compressor.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/looper.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/utils.ts",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/recorder.js",[],"/var/singysongy/singysongy/client/src/Components/VideoChat/webAudio/recorder.worker.js",["188","189"],"export default () => {\n\n  let recLength = 0,\n    recBuffersL = [],\n    recBuffersR = [],\n    sampleRate;\n\n  self.addEventListener('message', e => { /* eslint-disable-line no-restricted-globals */\n    switch(e.data.command){\n      case 'init':\n        init(e.data.config);\n        break;\n      case 'record':\n        record(e.data.buffer);\n        break;\n      case 'exportWAV':\n        exportWAV(e.data.type);\n        break;\n      case 'getBuffer':\n        getBuffer();\n        break;\n      case 'clear':\n        clear();\n        break;\n    }\n  });\n\n  function init(config){\n    sampleRate = config.sampleRate;\n  }\n\n\n  function record(inputBuffer){\n    recBuffersL.push(inputBuffer[0]);\n    recBuffersR.push(inputBuffer[1]);\n    recLength += inputBuffer[0].length;\n  }\n\n  function exportWAV(type){\n    let bufferL = mergeBuffers(recBuffersL, recLength);\n    let bufferR = mergeBuffers(recBuffersR, recLength);\n    let interleaved = interleave(bufferL, bufferR);\n    let dataview = encodeWAV(interleaved);\n    let audioBlob = new Blob([dataview], { type: type });\n\n    this.postMessage(audioBlob);\n  }\n\n  function getBuffer() {\n    let buffers = [];\n    buffers.push( mergeBuffers(recBuffersL, recLength) );\n    buffers.push( mergeBuffers(recBuffersR, recLength) );\n    this.postMessage(buffers);\n  }\n\n  function clear(){\n    recLength = 0;\n    recBuffersL = [];\n    recBuffersR = [];\n  }\n\n  function mergeBuffers(recBuffers, recLength){\n    let result = new Float32Array(recLength);\n    let offset = 0;\n    for (let i = 0; i < recBuffers.length; i++){\n      result.set(recBuffers[i], offset);\n      offset += recBuffers[i].length;\n    }\n    return result;\n  }\n\n  function interleave(inputL, inputR){\n    let length = inputL.length + inputR.length;\n    let result = new Float32Array(length);\n\n    let index = 0,\n      inputIndex = 0;\n\n    while (index < length){\n      result[index++] = inputL[inputIndex];\n      result[index++] = inputR[inputIndex];\n      inputIndex++;\n    }\n    return result;\n  }\n\n  function floatTo16BitPCM(output, offset, input){\n    for (let i = 0; i < input.length; i++, offset+=2){\n      let s = Math.max(-1, Math.min(1, input[i]));\n      output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n    }\n  }\n\n  function writeString(view, offset, string){\n    for (let i = 0; i < string.length; i++){\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  }\n\n  function encodeWAV(samples){\n    let buffer = new ArrayBuffer(44 + samples.length * 2);\n    let view = new DataView(buffer);\n\n    /* RIFF identifier */\n    writeString(view, 0, 'RIFF');\n    /* file length */\n    view.setUint32(4, 32 + samples.length * 2, true);\n    /* RIFF type */\n    writeString(view, 8, 'WAVE');\n    /* format chunk identifier */\n    writeString(view, 12, 'fmt ');\n    /* format chunk length */\n    view.setUint32(16, 16, true);\n    /* sample format (raw) */\n    view.setUint16(20, 1, true);\n    /* channel count */\n    view.setUint16(22, 2, true);\n    /* sample rate */\n    view.setUint32(24, sampleRate, true);\n    /* byte rate (sample rate * block align) */\n    view.setUint32(28, sampleRate * 4, true);\n    /* block align (channel count * bytes per sample) */\n    view.setUint16(32, 4, true);\n    /* bits per sample */\n    view.setUint16(34, 16, true);\n    /* data chunk identifier */\n    writeString(view, 36, 'data');\n    /* data chunk length */\n    view.setUint32(40, samples.length * 2, true);\n\n    floatTo16BitPCM(view, 44, samples);\n\n    return view;\n  }\n}","/var/singysongy/singysongy/client/src/Components/RadioFeed/RadioFeed.tsx",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/PlayRoom.tsx",["190","191","192","193"],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/peersAudio.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/constants.tsx",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/VideoCard.tsx",["194","195","196","197","198"],"/var/singysongy/singysongy/client/src/Components/PlayRoom/SocketsAndPeers.tsx",["199","200"],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/utils.ts",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/looper.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/compressor.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/equalizer.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/reverb.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/jungle.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/recorder.js",[],"/var/singysongy/singysongy/client/src/Components/PlayRoom/webAudio/recorder.worker.js",["201","202"],"/var/singysongy/singysongy/client/src/Components/PlayRoom/AudioFX.tsx",["203","204","205","206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":12},{"ruleId":"212","severity":1,"message":"216","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":18},{"ruleId":"212","severity":1,"message":"217","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":27},{"ruleId":"212","severity":1,"message":"218","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":29},{"ruleId":"212","severity":1,"message":"219","line":11,"column":8,"nodeType":"214","messageId":"215","endLine":11,"endColumn":21},{"ruleId":"212","severity":1,"message":"220","line":12,"column":8,"nodeType":"214","messageId":"215","endLine":12,"endColumn":16},{"ruleId":"212","severity":1,"message":"221","line":13,"column":8,"nodeType":"214","messageId":"215","endLine":13,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":69,"column":10,"nodeType":"214","messageId":"215","endLine":69,"endColumn":21},{"ruleId":"212","severity":1,"message":"223","line":69,"column":23,"nodeType":"214","messageId":"215","endLine":69,"endColumn":37},{"ruleId":"212","severity":1,"message":"224","line":70,"column":10,"nodeType":"214","messageId":"215","endLine":70,"endColumn":19},{"ruleId":"212","severity":1,"message":"225","line":70,"column":21,"nodeType":"214","messageId":"215","endLine":70,"endColumn":33},{"ruleId":"212","severity":1,"message":"226","line":71,"column":10,"nodeType":"214","messageId":"215","endLine":71,"endColumn":18},{"ruleId":"212","severity":1,"message":"227","line":71,"column":20,"nodeType":"214","messageId":"215","endLine":71,"endColumn":31},{"ruleId":"212","severity":1,"message":"228","line":75,"column":10,"nodeType":"214","messageId":"215","endLine":75,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":94,"column":6,"nodeType":"231","endLine":94,"endColumn":25,"suggestions":"232"},{"ruleId":"229","severity":1,"message":"233","line":109,"column":6,"nodeType":"231","endLine":109,"endColumn":16,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":178,"column":28,"nodeType":"237","messageId":"238","endLine":178,"endColumn":30},{"ruleId":"212","severity":1,"message":"239","line":222,"column":9,"nodeType":"214","messageId":"215","endLine":222,"endColumn":25},{"ruleId":"212","severity":1,"message":"240","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"241","line":18,"column":6,"nodeType":"231","endLine":18,"endColumn":8,"suggestions":"242"},{"ruleId":"212","severity":1,"message":"243","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"244","line":66,"column":10,"nodeType":"214","messageId":"215","endLine":66,"endColumn":19},{"ruleId":"229","severity":1,"message":"245","line":82,"column":5,"nodeType":"231","endLine":82,"endColumn":16,"suggestions":"246"},{"ruleId":"229","severity":1,"message":"245","line":86,"column":5,"nodeType":"231","endLine":86,"endColumn":12,"suggestions":"247"},{"ruleId":"235","severity":1,"message":"236","line":178,"column":27,"nodeType":"237","messageId":"238","endLine":178,"endColumn":29},{"ruleId":"212","severity":1,"message":"248","line":13,"column":8,"nodeType":"214","messageId":"215","endLine":13,"endColumn":14},{"ruleId":"212","severity":1,"message":"249","line":14,"column":8,"nodeType":"214","messageId":"215","endLine":14,"endColumn":20},{"ruleId":"212","severity":1,"message":"216","line":15,"column":8,"nodeType":"214","messageId":"215","endLine":15,"endColumn":18},{"ruleId":"229","severity":1,"message":"250","line":176,"column":6,"nodeType":"231","endLine":176,"endColumn":14,"suggestions":"251"},{"ruleId":"229","severity":1,"message":"252","line":231,"column":6,"nodeType":"231","endLine":231,"endColumn":12,"suggestions":"253"},{"ruleId":"229","severity":1,"message":"254","line":248,"column":6,"nodeType":"231","endLine":248,"endColumn":18,"suggestions":"255"},{"ruleId":"212","severity":1,"message":"256","line":497,"column":12,"nodeType":"214","messageId":"215","endLine":497,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":1,"column":1,"nodeType":"259","endLine":135,"endColumn":2},{"ruleId":"260","severity":1,"message":"261","line":9,"column":5,"nodeType":"262","messageId":"263","endLine":25,"endColumn":6},{"ruleId":"212","severity":1,"message":"228","line":65,"column":10,"nodeType":"214","messageId":"215","endLine":65,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":84,"column":6,"nodeType":"231","endLine":84,"endColumn":25,"suggestions":"264"},{"ruleId":"229","severity":1,"message":"233","line":99,"column":6,"nodeType":"231","endLine":99,"endColumn":16,"suggestions":"265"},{"ruleId":"235","severity":1,"message":"236","line":168,"column":28,"nodeType":"237","messageId":"238","endLine":168,"endColumn":30},{"ruleId":"212","severity":1,"message":"243","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":17},{"ruleId":"212","severity":1,"message":"244","line":66,"column":10,"nodeType":"214","messageId":"215","endLine":66,"endColumn":19},{"ruleId":"229","severity":1,"message":"245","line":82,"column":5,"nodeType":"231","endLine":82,"endColumn":16,"suggestions":"266"},{"ruleId":"229","severity":1,"message":"245","line":86,"column":5,"nodeType":"231","endLine":86,"endColumn":12,"suggestions":"267"},{"ruleId":"235","severity":1,"message":"236","line":178,"column":27,"nodeType":"237","messageId":"238","endLine":178,"endColumn":29},{"ruleId":"212","severity":1,"message":"240","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"241","line":18,"column":6,"nodeType":"231","endLine":18,"endColumn":8,"suggestions":"268"},{"ruleId":"257","severity":1,"message":"258","line":1,"column":1,"nodeType":"259","endLine":135,"endColumn":2},{"ruleId":"260","severity":1,"message":"261","line":9,"column":5,"nodeType":"262","messageId":"263","endLine":25,"endColumn":6},{"ruleId":"212","severity":1,"message":"269","line":15,"column":8,"nodeType":"214","messageId":"215","endLine":15,"endColumn":14},{"ruleId":"229","severity":1,"message":"250","line":174,"column":6,"nodeType":"231","endLine":174,"endColumn":14,"suggestions":"270"},{"ruleId":"229","severity":1,"message":"252","line":229,"column":6,"nodeType":"231","endLine":229,"endColumn":12,"suggestions":"271"},{"ruleId":"229","severity":1,"message":"254","line":246,"column":6,"nodeType":"231","endLine":246,"endColumn":18,"suggestions":"272"},{"ruleId":"212","severity":1,"message":"256","line":495,"column":12,"nodeType":"214","messageId":"215","endLine":495,"endColumn":23},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"@typescript-eslint/no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'RecordVoiceOverIcon' is defined but never used.","'ChatBubbleOutlineIcon' is defined but never used.","'MusicNoteIcon' is defined but never used.","'LoopIcon' is defined but never used.","'ExitIcon' is defined but never used.","'audioFXOpen' is assigned a value but never used.","'setAudioFXOpen' is assigned a value but never used.","'commsOpen' is assigned a value but never used.","'setCommsOpen' is assigned a value but never used.","'loopOpen' is assigned a value but never used.","'setLoopOpen' is assigned a value but never used.","'chatMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AudioContext' and 'audioCtx'. Either include them or remove the dependency array.","ArrayExpression",["275"],"React Hook useEffect has a missing dependency: 'initMedia'. Either include it or remove the dependency array.",["276"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleExitButton' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'initSockets' and 'socket'. Either include them or remove the dependency array.",["277"],"'FormGroup' is defined but never used.","'isShowing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["278"],["279"],"'Drawer' is defined but never used.","'ChevronRight' is defined but never used.","React Hook useEffect has missing dependencies: 'audioCtx', 'initSamples', 'loopsGainValue', 'monitorGain', 'pitchOffsetAmount', 'remoteGain', 'remoteMute', 'reverbDryGain', 'reverbPreset', 'reverbWetGain', 'samplesGainValue', and 'updateLocalStreamAudio'. Either include them or remove the dependency array. If 'updateLocalStreamAudio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["280"],"React Hook useEffect has a missing dependency: 'compressorGain'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has missing dependencies: 'pitchShiftDryGain' and 'pitchShiftWetGain'. Either include them or remove the dependency array.",["282"],"'loopOverdub' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["283"],["284"],["285"],["286"],["287"],"'Router' is defined but never used.",["288"],["289"],["290"],"no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"291","fix":"307"},{"desc":"293","fix":"308"},{"desc":"297","fix":"309"},{"desc":"299","fix":"310"},{"desc":"295","fix":"311"},{"desc":"301","fix":"312"},{"desc":"303","fix":"313"},{"desc":"305","fix":"314"},"Update the dependencies array to be: [AudioContext, audioCtx, roomNameSubmitted]",{"range":"315","text":"316"},"Update the dependencies array to be: [audioCtx, initMedia]",{"range":"317","text":"318"},"Update the dependencies array to be: [initSockets, socket]",{"range":"319","text":"320"},"Update the dependencies array to be: [props, sliderVal]",{"range":"321","text":"322"},"Update the dependencies array to be: [micOn, props]",{"range":"323","text":"324"},"Update the dependencies array to be: [audioCtx, initSamples, loopsGainValue, monitorGain, pitchOffsetAmount, remoteGain, remoteMute, reverbDryGain, reverbPreset, reverbWetGain, samplesGainValue, stream, updateLocalStreamAudio]",{"range":"325","text":"326"},"Update the dependencies array to be: [comp, compressorGain]",{"range":"327","text":"328"},"Update the dependencies array to be: [pitchShift, pitchShiftDryGain, pitchShiftWetGain]",{"range":"329","text":"330"},{"range":"331","text":"316"},{"range":"332","text":"318"},{"range":"333","text":"322"},{"range":"334","text":"324"},{"range":"335","text":"320"},{"range":"336","text":"326"},{"range":"337","text":"328"},{"range":"338","text":"330"},[2771,2790],"[AudioContext, audioCtx, roomNameSubmitted]",[3090,3100],"[audioCtx, initMedia]",[519,521],"[initSockets, socket]",[2020,2031],"[props, sliderVal]",[2106,2113],"[micOn, props]",[7536,7544],"[audioCtx, initSamples, loopsGainValue, monitorGain, pitchOffsetAmount, remoteGain, remoteMute, reverbDryGain, reverbPreset, reverbWetGain, samplesGainValue, stream, updateLocalStreamAudio]",[9375,9381],"[comp, compressorGain]",[10178,10190],"[pitchShift, pitchShiftDryGain, pitchShiftWetGain]",[2169,2188],[2488,2498],[2020,2031],[2106,2113],[519,521],[7408,7416],[9247,9253],[10050,10062]]