[{"/var/singysongy/singysongy/client/src/index.tsx":"1","/var/singysongy/singysongy/client/src/serviceWorker.js":"2","/var/singysongy/singysongy/client/src/reportWebVitals.ts":"3","/var/singysongy/singysongy/client/src/Components/App/App.tsx":"4","/var/singysongy/singysongy/client/src/Components/Appbar/Appbar.tsx":"5","/var/singysongy/singysongy/client/src/Components/Home/Home.tsx":"6","/var/singysongy/singysongy/client/src/Components/MusicRoom/MusicRoom.tsx":"7","/var/singysongy/singysongy/client/src/Components/MusicRoom/audioUtils.ts":"8","/var/singysongy/singysongy/client/src/Components/MusicRoom/SocketsAndPeers.tsx":"9","/var/singysongy/singysongy/client/src/Components/MusicRoom/constants.tsx":"10","/var/singysongy/singysongy/client/src/Components/MusicRoom/VideoCard.tsx":"11","/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/reverb.js":"12","/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/jungle.js":"13","/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/compressor.js":"14","/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/equalizer.js":"15"},{"size":1270,"mtime":1618775429172,"results":"16","hashOfConfig":"17"},{"size":5353,"mtime":1618768773249,"results":"18","hashOfConfig":"17"},{"size":425,"mtime":1618768763485,"results":"19","hashOfConfig":"17"},{"size":339,"mtime":1618768763481,"results":"20","hashOfConfig":"17"},{"size":2922,"mtime":1618792104111,"results":"21","hashOfConfig":"17"},{"size":1280,"mtime":1618848659215,"results":"22","hashOfConfig":"17"},{"size":31901,"mtime":1618849255809,"results":"23","hashOfConfig":"17"},{"size":423,"mtime":1618768773249,"results":"24","hashOfConfig":"17"},{"size":2291,"mtime":1618775714637,"results":"25","hashOfConfig":"17"},{"size":1944,"mtime":1618776291431,"results":"26","hashOfConfig":"17"},{"size":1386,"mtime":1618768773249,"results":"27","hashOfConfig":"17"},{"size":1331,"mtime":1618771334493,"results":"28","hashOfConfig":"17"},{"size":7467,"mtime":1618771332453,"results":"29","hashOfConfig":"17"},{"size":1361,"mtime":1618792151319,"results":"30","hashOfConfig":"17"},{"size":1847,"mtime":1618849333565,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xc703w",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/singysongy/singysongy/client/src/index.tsx",[],["66","67"],"/var/singysongy/singysongy/client/src/serviceWorker.js",[],["68","69"],"/var/singysongy/singysongy/client/src/reportWebVitals.ts",[],"/var/singysongy/singysongy/client/src/Components/App/App.tsx",[],"/var/singysongy/singysongy/client/src/Components/Appbar/Appbar.tsx",[],"/var/singysongy/singysongy/client/src/Components/Home/Home.tsx",["70","71","72","73","74","75"],"/var/singysongy/singysongy/client/src/Components/MusicRoom/MusicRoom.tsx",["76","77","78","79","80","81","82","83","84"],"/var/singysongy/singysongy/client/src/Components/MusicRoom/audioUtils.ts",[],"/var/singysongy/singysongy/client/src/Components/MusicRoom/SocketsAndPeers.tsx",["85","86"],"import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { ICE_CONFIGURATION, SOCKET_URL } from './constants';\n\nexport default function SocketsAndPeers({localStream, handleVideoListAdd, handleVideoListRemove}) {\n  \n  const socket = io(SOCKET_URL);\n  \n  const peers = {};\n  useEffect(() => {\n    initSockets();\n    return function cleanup() {\n      socket.disconnect();\n    };\n  }, []);\n\n  function initSockets() {\n\n    console.log('init sockets and peers');\n    socket.on('connect', () => {\n      console.log('I AM ', socket.id);\n      socket.emit('subscribe', { room: 'default', socketId: socket.id });\n    });\n  \n    socket.on('initReceive', socket_id => {\n      console.log('INIT RECEIVE ' + socket_id)  \n      addPeer(socket_id, false)\n    });\n  \n    socket.on('initSend', data => {\n      console.log('INIT SEND RECEIVED from ' + JSON.stringify(data))\n      addPeer(data, true)\n    });\n\n    socket.on('signal', data => {\n      peers[data.socket_id].signal(data.signal)\n    });\n  \n    socket.on('removePeer', socket_id => {\n      console.log('removing peer ' + socket_id);\n      removePeer(socket_id);\n    })\n  \n    socket.on('disconnect', () => {\n      console.log('GOT DISCONNECTED')\n      for (let socket_id in peers) {\n        removePeer(socket_id);\n      }\n    });\n  }\n\n  const addPeer = async function (socket_id: String, am_initiator: Boolean) {\n      console.log('add peer ' + socket_id + ' initiator? ' + am_initiator);\n      peers[socket_id] = await new SimplePeer({\n          initiator: am_initiator,\n          stream: localStream,\n          config: ICE_CONFIGURATION\n      });\n  \n      if (am_initiator === false) {\n        socket.emit('initSend', socket_id);\n      }\n      \n      peers[socket_id].on('signal', data => {\n        socket.emit('signal', {\n          signal: data,\n          socket_id: socket_id\n        })\n      })\n  \n      peers[socket_id].on('stream', stream => {\n        const videoProps = {src: stream, socketId: socket_id};\n        handleVideoListAdd(videoProps);\n      })\n  }\n  \n  function removePeer(socket_id: String) {\n    handleVideoListRemove(socket_id);\n    if (peers[socket_id]) peers[socket_id].destroy();\n    delete peers[socket_id];\n  }\n    \n  return <div></div>;\n      \n}","/var/singysongy/singysongy/client/src/Components/MusicRoom/constants.tsx",[],"/var/singysongy/singysongy/client/src/Components/MusicRoom/VideoCard.tsx",[],"/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/reverb.js",[],"/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/jungle.js",["87","88","89"],"// Copyright 2012, Google Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nfunction createFadeBuffer(context, activeTime, fadeTime) {\n    var length1 = activeTime * context.sampleRate;\n    var length2 = (activeTime - 2*fadeTime) * context.sampleRate;\n    var length = length1 + length2;\n    var buffer = context.createBuffer(1, length, context.sampleRate);\n    var p = buffer.getChannelData(0);\n\n    var fadeLength = fadeTime * context.sampleRate;\n\n    var fadeIndex1 = fadeLength;\n    var fadeIndex2 = length1 - fadeLength;\n\n    // 1st part of cycle\n    for (var i = 0; i < length1; ++i) {\n        var value;\n\n        if (i < fadeIndex1) {\n            value = Math.sqrt(i / fadeLength);\n        } else if (i >= fadeIndex2) {\n            value = Math.sqrt(1 - (i - fadeIndex2) / fadeLength);\n        } else {\n            value = 1;\n        }\n\n        p[i] = value;\n    }\n\n    // 2nd part\n    for (var i = length1; i < length; ++i) {\n        p[i] = 0;\n    }\n\n\n    return buffer;\n}\n\nfunction createDelayTimeBuffer(context, activeTime, fadeTime, shiftUp) {\n    var length1 = activeTime * context.sampleRate;\n    var length2 = (activeTime - 2*fadeTime) * context.sampleRate;\n    var length = length1 + length2;\n    var buffer = context.createBuffer(1, length, context.sampleRate);\n    var p = buffer.getChannelData(0);\n\n    // 1st part of cycle\n    for (var i = 0; i < length1; ++i) {\n        if (shiftUp)\n          // This line does shift-up transpose\n          p[i] = (length1-i)/length;\n        else\n          // This line does shift-down transpose\n          p[i] = i / length1;\n    }\n\n    // 2nd part\n    for (var i = length1; i < length; ++i) {\n        p[i] = 0;\n    }\n\n    return buffer;\n}\n\nvar delayTime = 0.100;\nvar fadeTime = 0.050;\nvar bufferTime = 0.100;\n\nexport default function Jungle(context) {\n\n    this.context = context;\n    // Create nodes for the input and output of this \"module\".\n    var input = context.createGain();\n    var output = context.createGain();\n    this.input = input;\n    this.output = output;\n\n    let dryGain = context.createGain();\n    let wetGain = context.createGain();\n\n    this.dry_gain = dryGain;\n    this.dry_gain.gain.value = 0.0;\n    this.wet_gain = wetGain;\n    this.wet_gain.gain.value = 0.0;\n\n    input.connect(dryGain);\n    dryGain.connect(output);\n    wetGain.connect(output);\n\n    // Delay modulation.\n    var mod1 = context.createBufferSource();\n    var mod2 = context.createBufferSource();\n    var mod3 = context.createBufferSource();\n    var mod4 = context.createBufferSource();\n    this.shiftDownBuffer = createDelayTimeBuffer(context, bufferTime, fadeTime, false);\n    this.shiftUpBuffer = createDelayTimeBuffer(context, bufferTime, fadeTime, true);\n    mod1.buffer = this.shiftDownBuffer;\n    mod2.buffer = this.shiftDownBuffer;\n    mod3.buffer = this.shiftUpBuffer;\n    mod4.buffer = this.shiftUpBuffer;\n    mod1.loop = true;\n    mod2.loop = true;\n    mod3.loop = true;\n    mod4.loop = true;\n\n    // for switching between oct-up and oct-down\n    var mod1Gain = context.createGain();\n    var mod2Gain = context.createGain();\n    var mod3Gain = context.createGain();\n    mod3Gain.gain.value = 0;\n    var mod4Gain = context.createGain();\n    mod4Gain.gain.value = 0;\n\n    mod1.connect(mod1Gain);\n    mod2.connect(mod2Gain);\n    mod3.connect(mod3Gain);\n    mod4.connect(mod4Gain);\n\n    // Delay amount for changing pitch.\n    var modGain1 = context.createGain();\n    var modGain2 = context.createGain();\n\n    var delay1 = context.createDelay();\n    var delay2 = context.createDelay();\n    mod1Gain.connect(modGain1);\n    mod2Gain.connect(modGain2);\n    mod3Gain.connect(modGain1);\n    mod4Gain.connect(modGain2);\n    modGain1.connect(delay1.delayTime);\n    modGain2.connect(delay2.delayTime);\n\n    // Crossfading.\n    var fade1 = context.createBufferSource();\n    var fade2 = context.createBufferSource();\n    var fadeBuffer = createFadeBuffer(context, bufferTime, fadeTime);\n    fade1.buffer = fadeBuffer\n    fade2.buffer = fadeBuffer;\n    fade1.loop = true;\n    fade2.loop = true;\n\n    var mix1 = context.createGain();\n    var mix2 = context.createGain();\n    mix1.gain.value = 0;\n    mix2.gain.value = 0;\n\n    fade1.connect(mix1.gain);\n    fade2.connect(mix2.gain);\n\n    // Connect processing graph.\n    input.connect(delay1);\n    input.connect(delay2);\n    delay1.connect(mix1);\n    delay2.connect(mix2);\n    mix1.connect(wetGain);\n    mix2.connect(wetGain);\n\n    // Start\n    var t = context.currentTime + 0.050;\n    var t2 = t + bufferTime - fadeTime;\n    mod1.start(t);\n    mod2.start(t2);\n    mod3.start(t);\n    mod4.start(t2);\n    fade1.start(t);\n    fade2.start(t2);\n\n    this.mod1 = mod1;\n    this.mod2 = mod2;\n    this.mod1Gain = mod1Gain;\n    this.mod2Gain = mod2Gain;\n    this.mod3Gain = mod3Gain;\n    this.mod4Gain = mod4Gain;\n    this.modGain1 = modGain1;\n    this.modGain2 = modGain2;\n    this.fade1 = fade1;\n    this.fade2 = fade2;\n    this.mix1 = mix1;\n    this.mix2 = mix2;\n    this.delay1 = delay1;\n    this.delay2 = delay2;\n\n    this.setDelay(delayTime);\n}\n\nJungle.prototype.setDelay = function(delayTime) {\n    this.modGain1.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);\n    this.modGain2.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);\n}\n\nvar previousPitch = -1;\n\nJungle.prototype.setPitchOffset = function(mult) {\n        if (mult>0) { // pitch up\n            this.mod1Gain.gain.value = 0;\n            this.mod2Gain.gain.value = 0;\n            this.mod3Gain.gain.value = 1;\n            this.mod4Gain.gain.value = 1;\n        } else { // pitch down\n            this.mod1Gain.gain.value = 1;\n            this.mod2Gain.gain.value = 1;\n            this.mod3Gain.gain.value = 0;\n            this.mod4Gain.gain.value = 0;\n        }\n        this.setDelay(delayTime*Math.abs(mult));\n    previousPitch = mult;\n}\n\nJungle.prototype.setJungleDryGain = function(gainValue) {\n    this.dry_gain.gain.value = gainValue;\n}\n\nJungle.prototype.setJungleWetGain = function(gainValue) {\n    this.wet_gain.gain.value = gainValue;\n}\n\n\n","/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/compressor.js",[],"/var/singysongy/singysongy/client/src/Components/MusicRoom/webAudio/equalizer.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":12},{"ruleId":"94","severity":1,"message":"100","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":18},{"ruleId":"94","severity":1,"message":"101","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":14},{"ruleId":"94","severity":1,"message":"102","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":20},{"ruleId":"94","severity":1,"message":"103","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":18},{"ruleId":"94","severity":1,"message":"104","line":18,"column":8,"nodeType":"96","messageId":"97","endLine":18,"endColumn":20},{"ruleId":"94","severity":1,"message":"105","line":104,"column":9,"nodeType":"96","messageId":"97","endLine":104,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":163,"column":6,"nodeType":"108","endLine":163,"endColumn":8,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":224,"column":6,"nodeType":"108","endLine":224,"endColumn":16,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":230,"column":6,"nodeType":"108","endLine":230,"endColumn":46,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":242,"column":6,"nodeType":"108","endLine":242,"endColumn":42,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":273,"column":6,"nodeType":"108","endLine":273,"endColumn":12,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":290,"column":6,"nodeType":"108","endLine":290,"endColumn":18,"suggestions":"119"},{"ruleId":"94","severity":1,"message":"120","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"121","line":16,"column":6,"nodeType":"108","endLine":16,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":58,"column":14,"nodeType":"96","messageId":"125","endLine":58,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":84,"column":14,"nodeType":"96","messageId":"125","endLine":84,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":231,"column":5,"nodeType":"96","messageId":"97","endLine":231,"endColumn":18},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'Icon' is defined but never used.","'DeleteIcon' is defined but never used.","'Button' is defined but never used.","'ListItemIcon' is defined but never used.","'InputLabel' is defined but never used.","'SettingsIcon' is defined but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AudioContext' and 'audioCtx'. Either include them or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'initSamples', 'initSocketsAndPeers', 'monitorGain', 'pitchOffsetAmount', 'reverbDryGain', 'reverbPreset', 'reverbWetGain', and 'samplesGainValue'. Either include them or remove the dependency array.",["131"],"React Hook useEffect has an unnecessary dependency: 'localOutputVolume.current'. Either exclude it or remove the dependency array. Mutable values like 'localOutputVolume.current' aren't valid dependencies because mutating them doesn't re-render the component.",["132"],"React Hook useEffect has a missing dependency: 'audioCtx.destination'. Either include it or remove the dependency array. Mutable values like 'localOutputVolume.current' aren't valid dependencies because mutating them doesn't re-render the component.",["133"],"React Hook useEffect has a missing dependency: 'compressorGain'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'pitchShiftDryGain' and 'pitchShiftWetGain'. Either include them or remove the dependency array.",["135"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'initSockets' and 'socket'. Either include them or remove the dependency array.",["136"],"no-redeclare","'i' is already defined.","redeclared","no-unused-vars","'previousPitch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [AudioContext, audioCtx]",{"range":"151","text":"152"},"Update the dependencies array to be: [audioCtx, initSamples, initSocketsAndPeers, monitorGain, pitchOffsetAmount, reverbDryGain, reverbPreset, reverbWetGain, samplesGainValue]",{"range":"153","text":"154"},"Update the dependencies array to be: [monitorGain]",{"range":"155","text":"156"},"Update the dependencies array to be: [monitor, audioCtx.destination]",{"range":"157","text":"158"},"Update the dependencies array to be: [comp, compressorGain]",{"range":"159","text":"160"},"Update the dependencies array to be: [pitchShift, pitchShiftDryGain, pitchShiftWetGain]",{"range":"161","text":"162"},"Update the dependencies array to be: [initSockets, socket]",{"range":"163","text":"164"},[5619,5621],"[AudioContext, audioCtx]",[8404,8414],"[audioCtx, initSamples, initSocketsAndPeers, monitorGain, pitchOffsetAmount, reverbDryGain, reverbPreset, reverbWetGain, samplesGainValue]",[8557,8597],"[monitorGain]",[8833,8869],"[monitor, audioCtx.destination]",[10082,10088],"[comp, compressorGain]",[10885,10897],"[pitchShift, pitchShiftDryGain, pitchShiftWetGain]",[456,458],"[initSockets, socket]"]