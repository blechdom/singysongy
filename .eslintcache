[{"/var/fb/aivx-ts-react/src/index.tsx":"1","/var/fb/aivx-ts-react/src/reportWebVitals.ts":"2","/var/fb/aivx-ts-react/src/spice/index.ts":"3","/var/fb/aivx-ts-react/src/spice/model.ts":"4","/var/fb/aivx-ts-react/src/spice/pitch_utils.ts":"5","/var/fb/aivx-ts-react/src/spice/spice.ts":"6","/var/fb/aivx-ts-react/src/spice/loudness_utils.ts":"7","/var/fb/aivx-ts-react/src/core/audio_utils.ts":"8","/var/fb/aivx-ts-react/src/Components/App/App.tsx":"9","/var/fb/aivx-ts-react/src/Components/DdspDemo/DdspDemo.tsx":"10","/var/fb/aivx-ts-react/src/Components/Home/Home.tsx":"11","/var/fb/aivx-ts-react/src/core/compat/global.ts":"12","/var/fb/aivx-ts-react/src/core/compat/navigator_node.ts":"13","/var/fb/aivx-ts-react/src/core/compat/global_browser.ts":"14","/var/fb/aivx-ts-react/src/ddsp/index.ts":"15","/var/fb/aivx-ts-react/src/ddsp/model.ts":"16","/var/fb/aivx-ts-react/src/ddsp/add_reverb.ts":"17","/var/fb/aivx-ts-react/src/ddsp/audio_utils.ts":"18","/var/fb/aivx-ts-react/src/ddsp/buffer_utils.ts":"19","/var/fb/aivx-ts-react/src/ddsp/constants.ts":"20","/var/fb/aivx-ts-react/src/ddsp/ddsp.ts":"21","/var/fb/aivx-ts-react/src/Components/VideoChat/VideoChat.tsx":"22"},{"size":559,"mtime":1610738429488,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1610737334335,"results":"25","hashOfConfig":"24"},{"size":735,"mtime":1610752905675,"results":"26","hashOfConfig":"24"},{"size":2214,"mtime":1610752905683,"results":"27","hashOfConfig":"24"},{"size":6414,"mtime":1610752905683,"results":"28","hashOfConfig":"24"},{"size":2123,"mtime":1610752905711,"results":"29","hashOfConfig":"24"},{"size":2115,"mtime":1610752905683,"results":"30","hashOfConfig":"24"},{"size":14895,"mtime":1610751788486,"results":"31","hashOfConfig":"24"},{"size":719,"mtime":1611700436390,"results":"32","hashOfConfig":"24"},{"size":6965,"mtime":1610755745600,"results":"33","hashOfConfig":"24"},{"size":987,"mtime":1611780646881,"results":"34","hashOfConfig":"24"},{"size":1665,"mtime":1610751918262,"results":"35","hashOfConfig":"24"},{"size":871,"mtime":1610751691985,"results":"36","hashOfConfig":"24"},{"size":2487,"mtime":1610752830275,"results":"37","hashOfConfig":"24"},{"size":734,"mtime":1610751971618,"results":"38","hashOfConfig":"24"},{"size":7522,"mtime":1610751971622,"results":"39","hashOfConfig":"24"},{"size":2164,"mtime":1610751971626,"results":"40","hashOfConfig":"24"},{"size":2318,"mtime":1610751971626,"results":"41","hashOfConfig":"24"},{"size":1443,"mtime":1610751971658,"results":"42","hashOfConfig":"24"},{"size":955,"mtime":1610751971618,"results":"43","hashOfConfig":"24"},{"size":7139,"mtime":1610751971618,"results":"44","hashOfConfig":"24"},{"size":3740,"mtime":1611794890503,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1g2ob2o",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/fb/aivx-ts-react/src/index.tsx",[],["94","95"],"/var/fb/aivx-ts-react/src/reportWebVitals.ts",[],"/var/fb/aivx-ts-react/src/spice/index.ts",[],"/var/fb/aivx-ts-react/src/spice/model.ts",[],"/var/fb/aivx-ts-react/src/spice/pitch_utils.ts",[],"/var/fb/aivx-ts-react/src/spice/spice.ts",[],"/var/fb/aivx-ts-react/src/spice/loudness_utils.ts",[],"/var/fb/aivx-ts-react/src/core/audio_utils.ts",[],"/var/fb/aivx-ts-react/src/Components/App/App.tsx",["96","97"],"import { Link, Route, Switch } from \"react-router-dom\";\nimport logo from './../../aivxlogo.jpg';\nimport DdspDemo from '../../Components/DdspDemo/DdspDemo';\nimport VideoChat from '../../Components/VideoChat/VideoChat';\nimport Home from '../../Components/Home/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h5>\n        <Link to=\"/\">Home</Link>\n        &nbsp;/&nbsp;\n        <Link to=\"/videoChat\">Video Chat</Link>\n        &nbsp;/&nbsp;  \n        <Link to=\"/ddspDemo\">DDSP</Link>\n      </h5>\n      <Route path=\"/videoChat\"><VideoChat /></Route>\n      <Route path=\"/ddspDemo\"><DdspDemo /></Route>\n      <Route exact path=\"/\"><Home /></Route>\n    </div>\n  );\n}\n\nexport default App;\n","/var/fb/aivx-ts-react/src/Components/DdspDemo/DdspDemo.tsx",["98","99","100"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {DDSP} from '../../ddsp/index';\nimport {SPICE} from '../../spice/index';\nimport {AudioFeatures, ModelValues} from '../../ddsp/interfaces';\nimport '../App/App.css';\n\nenum MODEL {\n  VIOLIN = 'violin',\n  TENOR_SAXOPHONE = 'tenor_saxophone',\n  TRUMPET = 'trumpet',\n  FLUTE = 'flute',\n}\n\nconst PRESET_MODEL_URL =\n    'https://storage.googleapis.com/magentadata/js/checkpoints/ddsp';\n\nfunction floatTo16BitPCM(\n    output: DataView, offset: number, input: Float32Array) {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n  }\n}\n\nfunction writeString(view: DataView, offset: number, str: string) {\n  for (let i = 0; i < str.length; i++) {\n    view.setUint8(offset + i, str.charCodeAt(i));\n  }\n}\n\nfunction encodeWAV(samples: Float32Array, sampleRate: number) {\n  const buffer = new ArrayBuffer(44 + samples.length * 2);\n  const view = new DataView(buffer);\n\n  const channels = 1;\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * 2, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, 1, true);\n  /* channel count */\n  view.setUint16(22, channels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 4, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, channels * 2, true);\n  /* bits per sample */\n  view.setUint16(34, 16, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true);\n\n  floatTo16BitPCM(view, 44, samples);\n\n  return view;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function DdspDemo() {\n  let audioCtx: AudioContext;\n\n  const [audioSource, setAudioSource] = useState<string>('');\n  const [audioFeatures, setAudioFeatures] = useState<AudioFeatures>(0);\n  const [instrument, setInstrument] = useState<string>('violin');\n  const [spice, setSpice] = useState<SPICE>(0);\n  const [fileToAnalyze, setFileToAnalyze] = useState(undefined);\n  audioCtx = new AudioContext();\n  \n\n  useEffect(() => {\n    async function spiceInit() {\n      if(spice === 0) initializeSpice();\n      if(spice?.initialize) {\n        await spice.initialize();\n        console.log('initialize spice for real here.');\n      }\n    }\n    spiceInit(); \n  }, [spice]);\n  \n  async function initializeSpice () {\n    setSpice(new SPICE());\n    console.log('Initialize Spice', spice);\n  }\n\n  const selectFile = (event) => {\n    console.log('set file to analyze ', event.target.files)\n    setFileToAnalyze(event.target.files[0]);\n  };\n  \n  async function readFileAndProcessAudio(src: string) {\n    console.log('audio ctx ', audioCtx);\n    const audioFile = await fetch(src);\n    const arrayBuffer = await audioFile.arrayBuffer();\n    const audioBuffer = await audioCtx.decodeAudioData(arrayBuffer);\n    setAudioFeatures(await spice.getAudioFeatures(audioBuffer));\n  }\n  \n  function analyzeAudio () {\n    console.log('analyze function ', fileToAnalyze);\n    const reader = new FileReader();\n    const file = fileToAnalyze;\n\n    reader.addEventListener('load', async () => {\n      // convert uploaded file to blob\n      await fetch(`${reader.result}`)\n          .then((res) => res.blob())\n          .then((res) => {\n            readFileAndProcessAudio(reader.result as string);\n            return {\n              src: reader.result,\n              type: file.type,\n              blob: res,\n            };\n          })\n          .catch((err) => console.log(err));\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleInstrumentChange = (event: Event) => {\n    console.log('event.target.value ', event.target.value);\n    setInstrument(event.target.value);\n  };\n\n  function clearAudio() {\n    setAudioSource('');\n  };\n\n  async function toneTransfer() {\n    console.log('audio_features', JSON.stringify(audioFeatures));\n    const ddsp = new DDSP(`${PRESET_MODEL_URL}/${instrument}`, null);\n    await ddsp.initialize();\n    const toneTransferredAudioData: Float32Array =\n        await ddsp.synthesize(audioFeatures);\n    const dataview = await encodeWAV(toneTransferredAudioData, audioCtx.sampleRate);\n    const blob = new Blob([dataview], {type: 'audio/wav'});\n    const url = window.URL.createObjectURL(blob);\n    console.log('blob: ', blob);\n    setAudioSource(url);\n    ddsp.dispose();\n  }\n\n  const classes = useStyles();\n\n  return(\n    <div className=\"App\">\n      <h1>React DDSP demo</h1>\n      <p>\n        <Button variant=\"contained\" onClick={initializeSpice}>1. Initialize Spice</Button>\n      </p>\n      <p>\n        <input\n          className={classes.input}\n          accept=\".wav,.mp3,.oga,.aac\"\n          type=\"file\"\n          onChange={selectFile}\n          id=\"raised-button-file\"\n        />\n        <label htmlFor=\"raised-button-file\"> \n          <Button variant=\"contained\" component=\"span\"> \n            2. Select File \n          </Button> \n        </label> \n      </p>\n      <p>\n        <Button variant=\"contained\" onClick={analyzeAudio}>3. Analyze Audio</Button>\n      </p>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">4. Select Instrument</InputLabel>\n        <Select\n          native\n          value={instrument}\n          onChange={handleInstrumentChange}\n          label=\"4. Select Instrument\"\n          inputProps={{\n            name: 'instrument',\n            id: 'outlined-age-native-simple',\n          }}\n        >\n          <option value={'violin'}>Violin</option>\n          <option value={'tenor_saxophone'}>Tenor Saxophone</option>\n          <option value={'trumpet'}>Trumpet</option>\n          <option value={'flute'}>Flute</option>\n        </Select>\n      </FormControl>\n      <p>\n        <Button variant=\"contained\" onClick={toneTransfer}>5. Generate Tone Transfer</Button>\n      </p>\n      <p>\n        <audio id=\"player\" controls src={audioSource}></audio>\n      </p>\n      <p>\n        <Button variant=\"contained\" onClick={clearAudio}>6. Clear Audio</Button>\n      </p>\n    </div>\n  );\n}","/var/fb/aivx-ts-react/src/Components/Home/Home.tsx",[],"/var/fb/aivx-ts-react/src/core/compat/global.ts",[],"/var/fb/aivx-ts-react/src/core/compat/navigator_node.ts",[],["101","102"],"/var/fb/aivx-ts-react/src/core/compat/global_browser.ts",[],"/var/fb/aivx-ts-react/src/ddsp/index.ts",[],"/var/fb/aivx-ts-react/src/ddsp/model.ts",[],"/var/fb/aivx-ts-react/src/ddsp/add_reverb.ts",[],"/var/fb/aivx-ts-react/src/ddsp/audio_utils.ts",[],"/var/fb/aivx-ts-react/src/ddsp/buffer_utils.ts",[],"/var/fb/aivx-ts-react/src/ddsp/constants.ts",[],"/var/fb/aivx-ts-react/src/ddsp/ddsp.ts",[],"/var/fb/aivx-ts-react/src/Components/VideoChat/VideoChat.tsx",["103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":23,"nodeType":"113","messageId":"114","endLine":1,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"116","line":9,"column":24,"nodeType":"113","messageId":"114","endLine":9,"endColumn":35},{"ruleId":"111","severity":1,"message":"117","line":12,"column":6,"nodeType":"113","messageId":"114","endLine":12,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":113,"column":6,"nodeType":"120","endLine":113,"endColumn":13,"suggestions":"121"},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"111","severity":1,"message":"124","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"125","line":24,"column":13,"nodeType":"126","endLine":42,"endColumn":4},{"ruleId":"118","severity":1,"message":"127","line":25,"column":14,"nodeType":"128","endLine":25,"endColumn":54},{"ruleId":"118","severity":1,"message":"129","line":39,"column":21,"nodeType":"113","endLine":39,"endColumn":27},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'ModelValues' is defined but never used.","'MODEL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializeSpice'. Either include it or remove the dependency array.","ArrayExpression",["132"],["130"],["131"],"'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'localStream' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [initializeSpice, spice]",{"range":"135","text":"136"},[3195,3202],"[initializeSpice, spice]"]